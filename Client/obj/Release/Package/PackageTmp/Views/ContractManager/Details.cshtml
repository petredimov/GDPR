@using GridMvc.Html
@using Client.Models
@model UserViewModel

@{
	ViewBag.Title = "Contract Management";
}

<div class="panel panel-info panelBackground">
	<div class="panel-heading"><h3 class="text-dark">Details</h3></div>
	<div class="panel-body">
		<div class="row">
			<div class="col-md-4">
				<div class="form-group">
					@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" }):
					@Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				</div>
			</div>
			<div class="col-md-4">
				<div class="form-group">
					@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" }):
					@Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
				</div>
			</div>
			<div class="col-md-4">
				<div class="form-group">
					@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" }):
					@Html.DisplayFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-md-4">
				@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" }):
				@Html.DisplayFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
			</div>
			<div class="col-md-4">
				<div class="form-group">
					@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" }):
					@Html.DisplayFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
				</div>
			</div>
			<div class="col-md-4">
				<div class="form-group">
					@Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" }):
					@Html.DisplayFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
				</div>
			</div>
		</div>
		<div class="panel panel-info panelBackground">
			<div class="panel-heading">Users</div>
			<div class="panel-body">
				@Html.Grid(Model.Users).Columns(columns =>
							  {
								  columns.Add(c => c.Id).Titled("Client ID");
								  columns.Add(c => c.Name).Titled("Name").Filterable(true);
								  columns.Add(c => c.Email).Titled("Email").Filterable(true);
								  columns.Add()
												   .Encoded(false)
												   .Sanitized(false)
												   .SetWidth(30)
										 .RenderValueAs(o => Html.ActionLink("Details", "Details", "ContractUser", new { id = o.Id }, null));
							  }).WithPaging(20).Sortable(true).Selectable(true)
			</div>
		</div>
	</div>
</div>
